{"categories": "basic python", "sub categories": "list", "conversations": {"list": ["A list is a data structure in Python that is a mutable, or changeable, ordered sequence of elements", "Lists in python are just like the arrays, declared in other languages.", "List is a type of container in Data Structures, which is used to store multiple data at the same time."], "define list": ["A list is a data structure in Python that is a mutable, or changeable, ordered sequence of elements.", "Lists in python are just like the arrays, declared in other languages.", "List is a type of container in Data Structures, which is used to store multiple data at the same time."], "bracket list type": ["We use Square brackets [] while declaring a list."], "create list": ["You can create a list by equating a square bracket containing list elements in inverted commas seperated by commas, to the list variable.", "Just like this :- List_name =['element1','element2','element3']."], "access element list": ["You can access list elements by refering to the index number.", "Use the List_name followed by a square bracket containing the element's index number.", "You can do it like this :- List_name[list_index]."], "access list": ["You can access list elements by refering to the index number.", "Use the List_name followed by a square bracket containing the element's index number.", "You can do it like this :- List_name[list_index]."], "change list value": ["You can change the value in a list by refering its index value and equating it to the new value.", "You can do it like this List_name[list_index] = 'new_value'."], "iterate list": ["This can be done using a simple for loop.", "You can use for loop for iterating through a list.", "Just use a for loop."], "check length list": ["You can do that using len() function.", "Use the len() function to do this.", "Use len(List_name) to check the same."], "add element list new": ["Use append() function to add a new element at the end of a list.", "You can do this using append() function.", "Use List_name.append('new_element') method for adding new element to a list."], "element insert list new": ["You can do this using insert() function.", "Use List_name.insert(index_value,'new_element')."], "item list remove": ["Use List_name.remove('element').", "You can use the pop() function which will remove the last element of the list if index not specified.", "You can use del keyword to delete an element from the list.", "Use the del keyword with list_name(index_to_delete)."], "delete item list": ["Use List_name.remove('element').", "You can use the pop() function which will remove the last element of the list if index not specified.", "You can use del keyword to delete an element from the list.", "Use the del keyword with list_name(index_to_delete)."], "item list pop": ["Use List_name.remove('element').", "You can use the pop() function which will remove the last element of the list if index not specified.", "You can use del keyword to delete an element from the list.", "Use the del keyword with list_name(index_to_delete)."], "element list remove": ["Use List_name.remove('element').", "You can use the pop() function which will remove the last element of the list if index not specified.", "You can use del keyword to delete an element from the list.", "Use the del keyword with list_name(index_to_delete)."], "delete element list": ["Use List_name.remove('element').", "You can use the pop() function which will remove the last element of the list if index not specified.", "You can use del keyword to delete an element from the list.", "Use the del keyword with list_name(index_to_delete)."], "element list pop": ["Use List_name.remove('element').", "You can use the pop() function which will remove the last element of the list if index not specified.", "You can use del keyword to delete an element from the list.", "Use the del keyword with list_name(index_to_delete)."], "copy list": ["Use copy() function with the new_list_name and equate it to the orignal list_name.", "You can use list() function to create a new list with same elements as the orignal list. Just Use :- new_list_name = list(list_name).", "You can do it like this :- list_name = target_list_name.copy()."], "concatenate list": ["You can use the extend() function to do this.", "Use extend() function to concatenate two lists."], "add list": ["You can use the extend() function to do this.", "Use extend() function to concatenate two lists."], "list sort": ["You can sort your list using the sort() function after your list_name seperated by a dot.", "To sort your list i would recommend you to use sorted() function as it is more efficient than sort() function."], "difference sort sort": ["Sort is used to sort a list temporarily but sorted sorts the lists permanently.", "Sort does not change the orignal list but sorted changes the orignal list and stores a sorted list in the orignal list variable."], "count element list number": ["You can do this using len() function by passing the list_name as the parameter to the function."], "count item list_name occurence": ["To do this you can use the .count() function by passing the item as the parameter to the count function inside inverted commas."], "convert list string": ["You can convert a list to a string by using .join() function and specify the list_name as the parameter in this function."], "list string": ["You can convert a list to a string by using .join() function and specify the list_name as the parameter in this function."], "convert list tuple": ["Just use the tuple() function by passing the list_name as the parameter."], "list tuple": ["Just use the tuple() function by passing the list_name as the parameter."], "convert list set": ["Just use the set() function by passing the list_name as the parameter."], "list set": ["Just use the set() function by passing the list_name as the parameter."], "list use": ["Lists are helpful for refactoring codes", "Lists are useful to convert a matrix into a vector", "Lists are useful for conversion from one type to another such as tuple to a set"], "benefit list": ["Lists are helpful for refactoring codes", "Lists are useful to convert a matrix into a vector", "Lists are useful for conversion from one type to another such as tuple to a set"], "advantage list og": ["Lists are helpful for refactoring codes", "Lists are useful to convert a matrix into a vector", "Lists are useful for conversion from one type to another such as tuple to a set"]}}