{"categories": "basic python", "sub categories": "matplotlib", "conversations": {"matplotlib": ["Matplotlib is an amazing visualization library in Python for 2D plots of arrays.", "Matplotlib is a multi-platform data visualization library built on NumPy arrays ", "Matplotlib is a visualization library."], "install matplotlib": ["Anoconda distributions comes with matplotlib", "In Linux you can use pip install matplotlib and in windows you can install matplotlib using conda installer with conda install matplotlib"], "conda": ["Windows package installer for Anoconda distribution."], "matplotlib use": ["Used for Explanatory data analysis", "Used for Scientific Plotting for publication"], "matplotlib plot type": ["Matplotlib includes barplots, histograms, Scatterplots and many more", "Barplots, Histograms, Scatterplots and many more."], "graph import matplotlib plot": ["Use 'import matplotlib.pyplot as plt' after installing matplotlib", "You can use import keyword and then the library name with an alias name to call the functions.", "You can use 'from matplotlib import pyplot' command to import pyplot for creating graphs."], "plt": ["plt is an alias for matplotlib.pyplot", "plt is used to call functions from pyplot in matplotlib"], "plt use": ["plt is an alias for matplotlib.pyplot", "plt is used to call functions from pyplot in matplotlib"], "inline matplotlib": ["In Jupyter notebook, it is used so that you don't have to call plt.show() every time.", "You can used this command in Jupyter notebook so that you don't have to call plt.show() every time."], "figure increase size": ["You can use the figsize parameter of the figure function.", "Use this command: 'plt.figure(figsize=(dimensions_seprated_by_commas))'"], "subplot": ["Subplots are groups of smaller axes that exist together within a single figure."], "create subplot": ["Use plt.subplot() function to create sub plots"], "arrangement subplot": ["Use plt.tight_layout() function to arrange your subplots", "You can arrange your subplot using plt.tight_layout()"], "add grid line plot": ["Use plt.grid(True) to do the same.", "You can do this using plt.grid(True)"], "change color line": ["You can pass in the arguments color while plotting the line", "Use plt.plot(x,y,color = 'color_name') to change line color"], "change line width": ["You can pass in the arguments width while plotting the line", "Use plt.plot(x,y,linewidth = 'width') to change line color"], "change line style": ["You can pass in the arguments style while plotting the line", "Use plt.plot(x,y,linestyle = 'style') to change line color"], "change marker style": ["You can pass in the arguments marker while plotting scatter plot", "Use plt.scatter(x,y,marker = 'marker_Style') to change the marker"], "change color marker": ["You can pass in the arguments color while plotting scatter plot", "Use plt.scatter(x,y,color = 'color_name') to change marker color"], "change transparency": ["You can do this using tha alpha parameter", "Use plt.plot(x,y,alpha = 'transparency_factor')."], "add legend plot": ["Use plt.legend() to add legends to the plot"], "change legend location": ["You can do this using the loc parameter in plt.legend() command.", "Use plt.legend(loc = 'position of the legend.')"], "change label legend": ["use set_text('label') with the legend() command"], "change legend size": ["Use fontsize parameter with the legend command", "You can do it using plt.legend(fontsize = 'size')"], "axis plot": ["Use plt.xlabel('name') or plt.ylabel('name') to do the same."], "axis extent set": ["Use plt.xlim() or plt.ylim() to set the limit of the axes."], "jpg plot save": ["You can do this using plt.savefig('plot_name.jpg') to save your plot", "Use savefig() command to save a plot"], "plot save": ["You can do this using plt.savefig('plot_name.file_type') to save your plot", "Use savefig() command to save a plot"]}}